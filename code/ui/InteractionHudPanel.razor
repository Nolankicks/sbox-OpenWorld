@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@namespace Kicks
@attribute [StyleSheet]
<root>
	@if (ShowUi && PopupUi is not null)
	{
	 @if (PopupUi is not null)
	{
		@if (PopupUi.ShowPopUp)
		{
			<div class="interactioncard">
			<div class="name">@PopupUi.Name</div>
			<div style="font-size: 24pxs" class="description">@PopupUi.Description</div>
			<img class="glyph" src=@PopupUi.Glyph.ResourcePath>
			@if (PopupUi.Icon is not null)
			{
				<img class="icon" texture=@PopupUi.Icon.ResourcePath>
			}
		</div>
		}
	}
	}
</root>

@code
{
	public Shotgun Shotgun { get; set; }
	public IconComponent Icon { get; set; }
	public bool ShowUi { get; set; } = false;
	public PopupUi PopupUi { get; set; }
	public Texture Interact = Input.GetGlyph("use", InputGlyphSize.Small, false);
	public override void Tick()
	{
		GetItem();
		if (PopupUi is not null)
		{
			ShowUi = true;
			var pos = Scene.Camera.PointToScreenPixels( PopupUi.GameObject.Transform.Position );
			pos *= ScaleFromScreen;
			Style.Position = PositionMode.Absolute;
			Style.Left = Length.Pixels( pos.x );
			Style.Top = Length.Pixels( pos.y );

			StateHasChanged();
		}
		else
		{
			Icon = null;
			PopupUi = null;
			ShowUi = false;
			StateHasChanged();
		}
		
	}
	public void GetItem()
{
    var ray = Scene.Camera.ScreenNormalToRay(0.5f);
    var tr = Scene.Trace.Ray(ray, 300).WithoutTags("player").Run();
    if (tr.Hit)
    {
		if (tr.GameObject is null) return;
		tr.GameObject.Parent.Components.TryGet<IconComponent>(out var icon, FindMode.EverythingInSelfAndParent);
		tr.GameObject.Components.TryGet<PopupUi>(out var popupUi, FindMode.EverythingInSelfAndParent);
		if (popupUi is not null)
		{
			PopupUi = popupUi;
		}
		else if (icon is not null)
		{
			Log.Info("Icon is not null but item is null");
		}
        else
        {
			Icon = null;
			PopupUi = null;
        }
    }
    else
    {
       
    }
}
}
