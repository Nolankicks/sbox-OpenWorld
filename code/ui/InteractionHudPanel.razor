@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@namespace Kicks
@attribute [StyleSheet]
<root>
	@if (ShowUi && Item is not null || Shotgun is not null || PopupUi is not null)
	{
		@if (Item is not null && Icon is not null)
		{
			<div class="interactioncard">
				<img class="icon" texture=@Icon.Icon.ResourcePath>
				<div class="name">@Item.Name</div>
				<div class="description">@Item.Description</div>
				<img class="glyph" src=@Interact.ResourcePath>
			</div>
		}
		else if (Shotgun is not null && Icon is not null)
		{
			<div class="interactioncard">
				<img class="icon" texture=@Icon.Icon.ResourcePath>
				<div class="name">@Shotgun.Name</div>
				<div class="description">@Shotgun.Description</div>
				<img class="glyph" src=@Interact.ResourcePath>
			</div>
		}
		else if (PopupUi is not null)
		{
			@if (PopupUi.ShowPopUp)
			{
				<div class="interactioncard">
					<div class="name">@PopupUi.Name</div>
					<div style="font-size: 24pxs" class="description">@PopupUi.Description</div>
					<img class="glyph" src=@PopupUi.Glyph.ResourcePath>
					@if (PopupUi.Icon is not null)
					{
						<img class="icon" texture=@PopupUi.Icon.ResourcePath>
					}
				</div>
			}
		}
	}
</root>

@code
{
	public Weapon Item { get; set; }
	public Shotgun Shotgun { get; set; }
	public IconComponent Icon { get; set; }
	public bool ShowUi { get; set; } = false;
	public PopupUi PopupUi { get; set; }
	public Texture Interact = Input.GetGlyph("use", InputGlyphSize.Small, false);
	public override void Tick()
	{
		GetItem();
		if (Item is not null)
		{
			ShowUi = true;
			var pos = Scene.Camera.PointToScreenPixels(Item.DroppedItem.Transform.Position);
			pos *= ScaleFromScreen;
			Style.Position = PositionMode.Absolute;
			Style.Left = Length.Pixels(pos.x);
			Style.Top = Length.Pixels(pos.y);
			StateHasChanged();
		}
		else if (Shotgun is not null)
		{
			ShowUi = true;
			var pos = Scene.Camera.PointToScreenPixels(Shotgun.pickUpObject.Transform.Position);
			pos *= ScaleFromScreen;
			Style.Position = PositionMode.Absolute;
			Style.Left = Length.Pixels(pos.x);
			Style.Top = Length.Pixels(pos.y);
			StateHasChanged();
		}
		else if (PopupUi is not null)
		{
			ShowUi = true;
			var pos = Scene.Camera.PointToScreenPixels(PopupUi.GameObject.Transform.Position);
			pos *= ScaleFromScreen;
			Style.Position = PositionMode.Absolute;
			Style.Left = Length.Pixels(pos.x);
			Style.Top = Length.Pixels(pos.y);
			StateHasChanged();
		}
		else
		{
			Item = null;
			Shotgun = null;
			Icon = null;
			PopupUi = null;
			ShowUi = false;
			StateHasChanged();
		}

	}
	public void GetItem()
	{
		var ray = Scene.Camera.ScreenNormalToRay(0.5f);
		var tr = Scene.Trace.Ray(ray, 300).WithoutTags("player").Run();
		if (!tr.Hit) return;
		if (tr.Hit)
		{
			if (tr.GameObject is null) return;
			tr.GameObject.Parent.Components.TryGet<Weapon>(out var item, FindMode.EverythingInSelfAndParent);
			tr.GameObject.Parent.Components.TryGet<IconComponent>(out var icon, FindMode.EverythingInSelfAndParent);
			tr.GameObject.Parent.Components.TryGet<Shotgun>(out var shotgun, FindMode.EverythingInSelfAndParent);
			tr.GameObject.Components.TryGet<PopupUi>(out var popupUi, FindMode.EverythingInSelfAndParent);
			if (item is not null && icon is not null)
			{
				Item = item;
				Icon = icon;
			}
			else if (shotgun is not null && icon is not null)
			{
				Shotgun = shotgun;
				Icon = icon;
			}
			else if (popupUi is not null)
			{
				PopupUi = popupUi;
			}
			else if (item is not null)
			{
				Log.Info("Item is not null but icon is null");
			}
			else if (icon is not null)
			{
				Log.Info("Icon is not null but item is null");
			}
			else
			{
				Item = null;
				Icon = null;
				PopupUi = null;
			}
		}
		else
		{
			Item = null;
		}
	}
}
