@using Sandbox;
@using Sandbox.Network;
@using System.Threading.Tasks;
@using Sandbox.Utility;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	<div class="title">DEAD 4 LEFT 2</div>
	<div class="levelselect">
		<div class="level" onclick=@( () => OpenScene(GameScenes[0]))>The Escape</div>
		<div class="level" onclick=@( () => OpenScene(GameScenes[1]))>Warehouse</div>
		@* <div class="level" onclick=@( () => ShowBiomeSelect = !ShowBiomeSelect)>Proc Gen</div> *@
		@* <div class="level" onclick=@( () => ShowLobby = !ShowLobby)>Dead 4 Left Classic</div> *@
	</div>
	<div class="lobbies @(ShowLobby ? "" : "hide")">
		<div class="header">Lobbies</div>
		<div class="createlobby" onclick=@( () => ShowMapList = !ShowMapList)>Create Lobby</div>
		@foreach (var lobby in Lobbies)
		{
			<div class="lobby" onclick=@(() => JoinLobby(lobby))>
				<div class="name">@lobby.OwnerId</div>
				<div class="players">@lobby.Members / @lobby.MaxMembers</div>
			</div>
		}
	</div>
	<div class="button" style="position: absolute; right: 32px; bottom: 32px;" onclick=@( () => Game.Overlay.ShowBinds())>Settings</div>
	<div class="button" style="position: absolute; left: 32px; bottom: 32px;" onclick=@( () => Game.Close())>Exit</div>
		<div class="biomeselect @(ShowBiomeSelect ? "" : "hide")">
			<div class="header">Biome Select</div>
			<div class="biome" onclick=@( () => OpenBiomeScene(GameScenes[3], "Grass"))>
				<img class="img" src=@BiomeTextures[0].ResourcePath>
				<div class="name">Forest</div>
			</div>
			<div class="biome" onclick=@( () => OpenBiomeScene(GameScenes[3], "Swamp"))>
				<img class="img" src=@BiomeTextures[1].ResourcePath>
				<div class="name">Swamp</div>
			</div>
			<div class="biome" onclick=@( () => OpenBiomeScene(GameScenes[3], "Sand"))>
				<img class="img" src=@BiomeTextures[2].ResourcePath>
				<div class="name">Desert</div>
			</div>
			<div class="biome" onclick=@( () => OpenBiomeScene(GameScenes[3], "Snow"))>
				<img class="img" src=@BiomeTextures[3].ResourcePath>
				<div class="name">Tundra</div>
			</div>
		</div>
		<div class="mapholder @(ShowMapList ? "" : "hide")">
		<PackageList ShowFilters="@true" Query="type:map sort:trending" OnSelected="@OnPackageSelected" Take=@(50)></PackageList>
		</div>
</root>

@code
{

	[Property] public List<SceneFile> GameScenes { get; set; } = new();
	[Property] public bool ShowMapList { get; set; } = false;
	private List<LobbyInformation> Lobbies { get; set; } = new();
	[Property] public bool ShowLobby { get; set; } = false;
	[Property] public bool ShowBiomeSelect { get; set; } = false;
	[Property] public List<Texture> BiomeTextures { get; set; }
	[Property] public SceneFile ClassicScene { get; set; }
	void JoinLobby(LobbyInformation lobby)
	{
		GameNetworkSystem.Connect(lobby.LobbyId);
	}
	protected override void OnStart()
	{
		_ = GetLobbies();
	}
	void OnPackageSelected(Package package)
	{
		LaunchArguments.Map = package.FullIdent;
		Game.ActiveScene.Load(ClassicScene);
	}
	void OpenScene(SceneFile scene)
	{
		Game.ActiveScene.Load(scene);
	}
	void OpenBiomeScene(SceneFile scene, string biome)
	{
		FileSystem.Data.WriteAllText("biome.txt", biome);
		Game.ActiveScene.Load(scene);
	}
	async Task GetLobbies()
	{
		while (true)
		{
			StateHasChanged();

			Lobbies = await Networking.QueryLobbies();

			StateHasChanged();

			await Task.DelayRealtimeSeconds(5);
		}
	}
	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine( Time.Now );
}
